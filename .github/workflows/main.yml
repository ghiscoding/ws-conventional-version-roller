name: CI
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch on Push and any branches on PR
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: 'Lint on Ubuntu'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install pnpm itself
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 8

      - name: Set NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 19
          cache: 'pnpm'

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Run pnpm install dependencies
        run: pnpm install

      - run: pnpm run prettier:check
      - run: pnpm run ci:lint

  tests:
    strategy:
      fail-fast: false
      matrix:
        node: [16, 18, 19]
        platform: [ubuntu-latest]

    name: 'Build & Unit Tests on Ubuntu / Node${{ matrix.node }}'
    runs-on: ${{matrix.platform}}
    if: ${{ !startsWith(github.event.head_commit.message, 'docs:') }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2 # codecov-bash seems to require this

      - name: Install pnpm itself
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 8

      - name: Set NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - run: node --version
      - run: pnpm --version

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "pnpm_cache_dir=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Run pnpm install dependencies
        run: pnpm install

      - name: Cache TypeScript and Vitest
        uses: actions/cache@v3
        with:
          path: |
            packages/*/lib
            packages/*/tsconfig.tsbuildinfo
            node_modules/.vitest
          key: vitest-${{ matrix.platform }}-${{ matrix.node }}-${{ github.run_id }}
          restore-keys: vitest-${{ matrix.platform }}-${{ matrix.node }}-

      - name: Run all workspace TSC builds
        run: pnpm build:full

      - name: Run Vitest unit tests
        if: |
          !contains(github.event.head_commit.message, 'chore(release)')
        run: pnpm test:coverage

      - name: Upload test coverage to Codecov
        uses: codecov/codecov-action@v3.1.2
        if: |
          contains(matrix.node, 19) &&
          !contains(github.event.head_commit.message, 'chore(release)')
